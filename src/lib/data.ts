
import type { User, Task, Game, Badge, Monster, BattleQuestion, DebugChallenge } from '@/lib/types';
import { PlaceHolderImages } from '@/lib/placeholder-images';
import { Swords, Bug, Puzzle, Keyboard, Eye, BrainCircuit, Gamepad2, Castle } from 'lucide-react';

export const user: User = {
  uid: '123',
  name: 'Alex',
  email: 'alex@example.com',
  avatarUrl: 'https://picsum.photos/seed/avatar/100/100',
  xp: 750,
  level: 5,
  xpToNextLevel: 1000,
  streak: 12,
  badges: [
    { id: '1', name: 'Python Pro', icon: PlaceHolderImages[0].imageUrl, description: 'Master of Python' },
    { id: '2', name: 'JS Master', icon: PlaceHolderImages[1].imageUrl, description: 'Wizard of the Web' },
    { id: '3', name: '5-Day Streak', icon: PlaceHolderImages[2].imageUrl, description: 'On Fire!' },
    { id: '4', name: 'First Challenge', icon: PlaceHolderImages[3].imageUrl, description: 'The Journey Begins' },
  ],
  completedTasks: [],
};

export const tasks: Task[] = [
    {
      id: '1',
      title: 'Two Sum',
      category: 'Data Structures & Algorithms',
      difficulty: 'Beginner',
      xp: 50,
      description: 'Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.',
      starterCode: {
        python: 'def two_sum(nums, target):\n  # Your code here\n  pass',
        javascript: 'function twoSum(nums, target) {\n  // Your code here\n}',
        java: 'class Solution {\n  public int[] twoSum(int[] nums, int target) {\n    // Your code here\n  }\n}',
        cpp: 'class Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        // Your code here\n    }\n};',
      },
      examples: [
        {
          input: 'nums = [2, 7, 11, 15], target = 9',
          output: '[0, 1]',
          explanation: 'Because nums[0] + nums[1] == 9, we return [0, 1].',
        },
      ],
      constraints: ['2 <= nums.length <= 104', '-109 <= nums[i] <= 109', '-109 <= target <= 109', 'Only one valid answer exists.'],
    },
    {
        id: '2',
        title: 'Reverse a String',
        category: 'Data Structures & Algorithms',
        difficulty: 'Beginner',
        xp: 40,
        description: 'Write a function that reverses a string. The input string is given as an array of characters s.',
        starterCode: {
          python: 'def reverse_string(s):\n  # Your code here\n  s.reverse()',
          javascript: 'function reverseString(s) {\n  // Your code here\n  s.reverse();\n}',
          java: 'class Solution {\n    public void reverseString(char[] s) {\n        // Your code here\n    }\n}',
          cpp: 'class Solution {\npublic:\n    void reverseString(vector<char>& s) {\n        // Your code here\n    }\n};',
        },
        examples: [
            {
                input: 's = ["h","e","l","l","o"]',
                output: '["o","l","l","e","h"]'
            }
        ],
        constraints: ['1 <= s.length <= 105', 's[i] is a printable ascii character.']
    },
    {
        id: '3',
        title: 'Validate a Binary Search Tree',
        category: 'Data Structures & Algorithms',
        difficulty: 'Advanced',
        xp: 150,
        description: 'Given the root of a binary tree, determine if it is a valid binary search tree (BST).',
        starterCode: {
          python: '# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isValidBST(self, root: Optional[TreeNode]) -> bool:\n      # Your code here\n      pass',
          javascript: '/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {boolean}\n */\nvar isValidBST = function(root) {\n    // Your code here\n};',
          java: '/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isValidBST(TreeNode root) {\n        // Your code here\n    }\n}',
          cpp: '/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        // Your code here\n    }\n};',
        },
        examples: [
            {
                input: 'root = [2,1,3]',
                output: 'true',
            },
            {
                input: 'root = [5,1,4,null,null,3,6]',
                output: 'false',
                explanation: "The root node\'s value is 5 but its right child\'s value is 4."
            }
        ],
        constraints: ['The number of nodes in the tree is in the range [1, 104].', '-231 <= Node.val <= 231 - 1']
    },
    {
      id: '4',
      title: 'FizzBuzz',
      category: 'Data Structures & Algorithms',
      difficulty: 'Beginner',
      xp: 30,
      description: 'Given an integer n, return a string array answer (1-indexed) where: answer[i] == "FizzBuzz" if i is divisible by 3 and 5, answer[i] == "Fizz" if i is divisible by 3, answer[i] == "Buzz" if i is divisible by 5, answer[i] == i (as a string) if none of the above conditions are true.',
      starterCode: {
        python: 'def fizz_buzz(n):\n  # Your code here\n  pass',
        javascript: 'function fizzBuzz(n) {\n  // Your code here\n}',
        java: 'class Solution {\n  public List<String> fizzBuzz(int n) {\n    // Your code here\n  }\n}',
        cpp: 'class Solution {\npublic:\n    vector<string> fizzBuzz(int n) {\n        // Your code here\n    }\n};',
      },
      examples: [{ input: 'n = 5', output: '["1","2","Fizz","4","Buzz"]' }],
      constraints: ['1 <= n <= 104'],
    },
    {
      id: '5',
      title: 'Build a Basic Counter with React',
      category: 'Web Development',
      difficulty: 'Beginner',
      xp: 60,
      description: 'Create a React component that displays a count and two buttons: one to increment the count and one to decrement it.',
      starterCode: {
        python: '# N/A for this challenge',
        javascript: 'import React, { useState } from "react";\n\nfunction Counter() {\n  // Your code here\n  return (\n    <div>\n      {/* Your JSX here */}\n    </div>\n  );\n}',
        java: '// N/A for this challenge',
        cpp: '// N/A for this challenge',
      },
      examples: [],
      constraints: ['The count should start at 0.'],
    },
    {
      id: '6',
      title: 'Maximum Subarray',
      category: 'Data Structures & Algorithms',
      difficulty: 'Intermediate',
      xp: 100,
      description: 'Given an integer array nums, find the subarray with the largest sum, and return its sum.',
      starterCode: {
        python: 'def max_sub_array(nums):\n  # Your code here\n  pass',
        javascript: 'function maxSubArray(nums) {\n  // Your code here\n}',
        java: 'class Solution {\n  public int maxSubArray(int[] nums) {\n    // Your code here\n  }\n}',
        cpp: 'class Solution {\npublic:\n    int maxSubArray(vector<int>& nums) {\n        // Your code here\n    }\n};',
      },
      examples: [{ input: 'nums = [-2,1,-3,4,-1,2,1,-5,4]', output: '6', explanation: 'The subarray [4,-1,2,1] has the largest sum 6.' }],
      constraints: ['1 <= nums.length <= 105', '-104 <= nums[i] <= 104'],
    },
    {
      id: '7',
      title: 'Train a Simple Linear Regression Model',
      category: 'AI/ML',
      difficulty: 'Intermediate',
      xp: 120,
      description: 'Using a library like scikit-learn, train a linear regression model on a given dataset.',
      starterCode: {
        python: 'from sklearn.linear_model import LinearRegression\nimport numpy as np\n\ndef train_model(X, y):\n  # Your code here\n  pass',
        javascript: '// N/A for this challenge',
        java: '// N/A for this challenge',
        cpp: '// N/A for this challenge',
      },
      examples: [],
      constraints: ['The input X will be a 2D numpy array.', 'The input y will be a 1D numpy array.'],
    },
    {
      id: '8',
      title: 'Detect SQL Injection',
      category: 'Cybersecurity',
      difficulty: 'Advanced',
      xp: 180,
      description: 'Write a function that takes a string query and returns true if it detects a potential SQL injection attempt.',
      starterCode: {
        python: 'import re\n\ndef is_sql_injection(query):\n  # Your code here\n  pass',
        javascript: 'function isSqlInjection(query) {\n  // Your code here\n}',
        java: 'import java.util.regex.Pattern;\n\nclass Detector {\n  public boolean isSqlInjection(String query) {\n    // Your code here\n  }\n}',
        cpp: '#include <regex>\n#include <string>\n\nbool isSqlInjection(const std::string& query) {\n    // Your code here\n}',
      },
      examples: [{ input: "query = 'SELECT * FROM users WHERE id = \\'1\\' OR \\'1\\'=\\'1\\''", output: 'true' }],
      constraints: [],
    },
    {
      id: '9',
      title: 'Implement a Queue using Stacks',
      category: 'Data Structures & Algorithms',
      difficulty: 'Intermediate',
      xp: 110,
      description: 'Implement a first in, first out (FIFO) queue using only two stacks. The implemented queue should support all the functions of a normal queue (push, peek, pop, and empty).',
      starterCode: {
        python: 'class MyQueue:\n\n    def __init__(self):\n        # Your code here\n\n    def push(self, x: int) -> None:\n        # Your code here\n\n    def pop(self) -> int:\n        # Your code here\n\n    def peek(self) -> int:\n        # Your code here\n\n    def empty(self) -> bool:\n        # Your code here\n',
        javascript: 'var MyQueue = function() {\n    // Your code here\n};\n\nMyQueue.prototype.push = function(x) {\n    // Your code here\n};\n\nMyQueue.prototype.pop = function() {\n    // Your code here\n};\n\nMyQueue.prototype.peek = function() {\n    // Your code here\n};\n\nMyQueue.prototype.empty = function() {\n    // Your code here\n};',
        java: 'class MyQueue {\n\n    public MyQueue() {\n        // Your code here\n    }\n    \n    public void push(int x) {\n        // Your code here\n    }\n    \n    public int pop() {\n        // Your code here\n    }\n    \n    public int peek() {\n        // Your code here\n    }\n    \n    public boolean empty() {\n        // Your code here\n    }\n}',
        cpp: 'class MyQueue {\npublic:\n    MyQueue() {\n        // Your code here\n    }\n    \n    void push(int x) {\n        // Your code here\n    }\n    \n    int pop() {\n        // Your code here\n    }\n    \n    int peek() {\n        // Your code here\n    }\n    \n    bool empty() {\n        // Your code here\n    }\n};',
      },
      examples: [],
      constraints: ['1 <= x <= 9', 'At most 100 calls will be made to push, pop, peek, and empty.'],
    },
    {
      id: '10',
      title: 'Longest Common Subsequence',
      category: 'Data Structures & Algorithms',
      difficulty: 'Expert',
      xp: 250,
      description: 'Given two strings text1 and text2, return the length of their longest common subsequence. If there is no common subsequence, return 0.',
      starterCode: {
        python: 'def longest_common_subsequence(text1, text2):\n  # Your code here\n  pass',
        javascript: 'function longestCommonSubsequence(text1, text2) {\n  // Your code here\n}',
        java: 'class Solution {\n  public int longestCommonSubsequence(String text1, String text2) {\n    // Your code here\n  }\n}',
        cpp: 'class Solution {\npublic:\n    int longestCommonSubsequence(string text1, string text2) {\n        // Your code here\n    }\n};',
      },
      examples: [{ input: 'text1 = "abcde", text2 = "ace"', output: '3', explanation: 'The longest common subsequence is "ace" and its length is 3.' }],
      constraints: ['1 <= text1.length, text2.length <= 1000', 'text1 and text2 consist of only lowercase English characters.', 'All the strings of wordDict are unique.'],
    },
    {
      id: '11',
      title: 'Fetch Data from an API',
      category: 'Web Development',
      difficulty: 'Beginner',
      xp: 70,
      description: 'Write an async JavaScript function that fetches data from a given URL and returns it as JSON.',
      starterCode: {
        python: '# N/A for this challenge',
        javascript: 'async function fetchData(url) {\n  // Your code here\n}',
        java: '// N/A for this challenge',
        cpp: '// N/A for this challenge',
      },
      examples: [],
      constraints: ['Use the Fetch API.', 'Handle potential errors.'],
    },
    {
      id: '12',
      title: 'Palindrome Number',
      category: 'Data Structures & Algorithms',
      difficulty: 'Beginner',
      xp: 45,
      description: 'Given an integer x, return true if x is a palindrome, and false otherwise.',
      starterCode: {
        python: 'def is_palindrome(x):\n  # Your code here\n  pass',
        javascript: 'function isPalindrome(x) {\n  // Your code here\n}',
        java: 'class Solution {\n  public boolean isPalindrome(int x) {\n    // Your code here\n  }\n}',
        cpp: 'class Solution {\npublic:\n    bool isPalindrome(int x) {\n        // Your code here\n    }\n};',
      },
      examples: [{ input: 'x = 121', output: 'true' }, { input: 'x = -121', output: 'false' }],
      constraints: ['-2^31 <= x <= 2^31 - 1'],
    },
    {
      id: '13',
      title: 'Implement a LRU Cache',
      category: 'Data Structures & Algorithms',
      difficulty: 'Expert',
      xp: 300,
      description: 'Design a data structure that follows the constraints of a Least Recently Used (LRU) cache.',
      starterCode: {
        python: 'class LRUCache:\n\n    def __init__(self, capacity: int):\n        # Your code here\n\n    def get(self, key: int) -> int:\n        # Your code here\n\n    def put(self, key: int, value: int) -> None:\n        # Your code here\n',
        javascript: 'var LRUCache = function(capacity) {\n    // Your code here\n};\n\nLRUCache.prototype.get = function(key) {\n    // Your code here\n};\n\nLRUCache.prototype.put = function(key, value) {\n    // Your code here\n};',
        java: 'class LRUCache {\n\n    public LRUCache(int capacity) {\n        // Your code here\n    }\n    \n    public int get(int key) {\n        // Your code here\n    }\n    \n    public void put(int key, int value) {\n        // Your code here\n    }\n}',
        cpp: 'class LRUCache {\npublic:\n    LRUCache(int capacity) {\n        // Your code here\n    }\n    \n    int get(int key) {\n        // Your code here\n    }\n    \n    void put(int key, int value) {\n        // Your code here\n    }\n};',
      },
      examples: [],
      constraints: ['1 <= capacity <= 3000', '0 <= key <= 10000', '0 <= value <= 10^5', 'At most 2 * 10^5 calls will be made to get and put.'],
    },
    {
      id: '14',
      title: 'Basic Cross-Site Scripting (XSS) Prevention',
      category: 'Cybersecurity',
      difficulty: 'Intermediate',
      xp: 130,
      description: 'Write a function that takes a string and sanitizes it to prevent basic XSS attacks by replacing < and > characters.',
      starterCode: {
        python: 'def sanitize(s):\n  # Your code here\n  pass',
        javascript: 'function sanitize(s) {\n  // Your code here\n}',
        java: 'class Sanitizer {\n  public String sanitize(String s) {\n    // Your code here\n  }\n}',
        cpp: '#include <string>\n\nstd::string sanitize(std::string s) {\n    // Your code here\n}',
      },
      examples: [{ input: 's = "<script>alert(\\\'XSS\\\')</script>"', output: '&lt;script&gt;alert(&#39;XSS&#39;)&lt;/script&gt;' }],
      constraints: [],
    },
    {
      id: '15',
      title: 'Merge Two Sorted Lists',
      category: 'Data Structures & Algorithms',
      difficulty: 'Beginner',
      xp: 80,
      description: 'You are given the heads of two sorted linked lists list1 and list2. Merge the two lists into one sorted list. The list should be made by splicing together the nodes of the first two lists. Return the head of the merged linked list.',
      starterCode: {
        python: '# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:\n        # Your code here',
        javascript: '/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} list1\n * @param {ListNode} list2\n * @return {ListNode}\n */\nvar mergeTwoLists = function(list1, list2) {\n    // Your code here\n};',
        java: '/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {\n        // Your code here\n    }\n}',
        cpp: '/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        // Your code here\n    }\n};',
      },
      examples: [{ input: 'list1 = [1,2,4], list2 = [1,3,4]', output: '[1,1,2,3,4,4]' }],
      constraints: ['The number of nodes in both lists is in the range [0, 50].', '-100 <= Node.val <= 100', 'Both list1 and list2 are sorted in non-decreasing order.'],
    },
    {
      id: '16',
      title: 'Debounce a Function',
      category: 'Web Development',
      difficulty: 'Intermediate',
      xp: 140,
      description: 'Implement a debounce function in JavaScript that limits the rate at which a function gets called.',
      starterCode: {
        python: '# N/A for this challenge',
        javascript: 'function debounce(func, delay) {\n  // Your code here\n}',
        java: '// N/A for this challenge',
        cpp: '// N/A for this challenge',
      },
      examples: [],
      constraints: ['The debounced function should only be called after the user has stopped invoking it for `delay` milliseconds.'],
    },
    {
      id: '17',
      title: 'Valid Parentheses',
      category: 'Data Structures & Algorithms',
      difficulty: 'Beginner',
      xp: 75,
      description: 'Given a string s containing just the characters \'(\', \')\', \'{\', \'}\', \'[\' and \']\', determine if the input string is valid.',
      starterCode: {
        python: 'def is_valid(s):\n  # Your code here\n  pass',
        javascript: 'function isValid(s) {\n  // Your code here\n}',
        java: 'class Solution {\n  public boolean isValid(String s) {\n    // Your code here\n  }\n}',
        cpp: 'class Solution {\npublic:\n    bool isValid(string s) {\n        // Your code here\n    }\n};',
      },
      examples: [{ input: 's = "()[]{}"', output: 'true' }, { input: 's = "(]"', output: 'false' }],
      constraints: ['1 <= s.length <= 104', 's consists of parentheses only \'()[]{}\'.'],
    },
    {
      id: '18',
      title: 'Implement a Basic Web Scraper',
      category: 'AI/ML',
      difficulty: 'Intermediate',
      xp: 150,
      description: 'Write a Python script to scrape the titles from the front page of Hacker News.',
      starterCode: {
        python: 'import requests\nfrom bs4 import BeautifulSoup\n\ndef get_hacker_news_titles():\n  # Your code here\n  pass',
        javascript: '// N/A for this challenge',
        java: '// N/A for this challenge',
        cpp: '// N/A for this challenge',
      },
      examples: [],
      constraints: ['Use the `requests` and `BeautifulSoup4` libraries.'],
    },
    {
      id: '19',
      title: 'Word Break',
      category: 'Data Structures & Algorithms',
      difficulty: 'Expert',
      xp: 280,
      description: 'Given a string s and a dictionary of strings wordDict, return true if s can be segmented into a space-separated sequence of one or more dictionary words.',
      starterCode: {
        python: 'def word_break(s, word_dict):\n  # Your code here\n  pass',
        javascript: 'function wordBreak(s, wordDict) {\n  // Your code here\n}',
        java: 'class Solution {\n  public boolean wordBreak(String s, List<String> wordDict) {\n    // Your code here\n  }\n}',
        cpp: 'class Solution {\npublic:\n    bool wordBreak(string s, vector<string>& wordDict) {\n        // Your code here\n    }\n};',
      },
      examples: [{ input: 's = "leetcode", wordDict = ["leet","code"]', output: 'true' }],
      constraints: ['1 <= s.length <= 300', '1 <= wordDict.length <= 1000', '1 <= wordDict[i].length <= 20', 's and wordDict[i] consist of only lowercase English letters.', 'All the strings of wordDict are unique.'],
    },
    {
      id: '20',
      title: 'Climbing Stairs',
      category: 'Data Structures & Algorithms',
      difficulty: 'Beginner',
      xp: 65,
      description: 'You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?',
      starterCode: {
        python: 'def climb_stairs(n):\n  # Your code here\n  pass',
        javascript: 'function climbStairs(n) {\n  // Your code here\n}',
        java: 'class Solution {\n  public int climbStairs(int n) {\n    // Your code here\n  }\n}',
        cpp: 'class Solution {\npublic:\n    int climbStairs(int n) {\n        // Your code here\n    }\n};',
      },
      examples: [{ input: 'n = 3', output: '3', explanation: 'There are three ways: 1. 1 + 1 + 1, 2. 1 + 2, 3. 2 + 1' }],
      constraints: ['1 <= n <= 45'],
    },
    {
      id: '21',
      title: 'Implement Promise.all',
      category: 'Web Development',
      difficulty: 'Advanced',
      xp: 200,
      description: 'Write a function that mimics the behavior of `Promise.all`.',
      starterCode: {
        python: '# N/A for this challenge',
        javascript: 'function promiseAll(promises) {\n  // Your code here\n}',
        java: '// N/A for this challenge',
        cpp: '// N/A for this challenge',
      },
      examples: [],
      constraints: ['The function should take an array of promises.', 'It should return a single promise that resolves with an array of results.'],
    },
    {
      id: '22',
      title: 'Caesar Cipher',
      category: 'Cybersecurity',
      difficulty: 'Beginner',
      xp: 90,
      description: 'Implement a Caesar cipher function that takes a string and a shift amount, and returns the encrypted string.',
      starterCode: {
        python: 'def caesar_cipher(text, shift):\n  # Your code here\n  pass',
        javascript: 'function caesarCipher(text, shift) {\n  // Your code here\n}',
        java: 'class Cipher {\n  public String caesarCipher(String text, int shift) {\n    // Your code here\n  }\n}',
        cpp: '#include <string>\n\nstd::string caesarCipher(std::string text, int shift) {\n    // Your code here\n}',
      },
      examples: [{ input: 'text = "abc", shift = 1', output: '"bcd"' }],
      constraints: ['The shift will be a positive integer.'],
    },
    {
      id: '23',
      title: 'Binary Tree Inorder Traversal',
      category: 'Data Structures & Algorithms',
      difficulty: 'Intermediate',
      xp: 95,
      description: 'Given the root of a binary tree, return the inorder traversal of its nodes\' values.',
      starterCode: {
        python: '# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def inorderTraversal(self, root: Optional[TreeNode]) -> List[int]:\n      # Your code here\n      pass',
        javascript: '/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\nvar inorderTraversal = function(root) {\n    // Your code here\n};',
        java: 'class Solution {\n    public List<Integer> inorderTraversal(TreeNode root) {\n        // Your code here\n    }\n}',
        cpp: 'class Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        // Your code here\n    }\n};',
      },
      examples: [{ input: 'root = [1,null,2,3]', output: '[1,3,2]' }],
      constraints: ['The number of nodes in the tree is in the range [0, 100].', '-100 <= Node.val <= 100'],
    },
    {
      id: '24',
      title: 'Analyze Text Sentiment',
      category: 'AI/ML',
      difficulty: 'Advanced',
      xp: 220,
      description: 'Use a library like NLTK or TextBlob in Python to determine if a piece of text has positive, negative, or neutral sentiment.',
      starterCode: {
        python: 'from textblob import TextBlob\n\ndef analyze_sentiment(text):\n  # Returns "positive", "negative", or "neutral"\n  # Your code here\n  pass',
        javascript: '// N/A for this challenge',
        java: '// N/A for this challenge',
        cpp: '// N/A for this challenge',
      },
      examples: [{ input: 'text = "I love this product!"', output: '"positive"' }, { input: 'text = "This is the worst thing ever."', output: '"negative"' }],
      constraints: [],
    },
    {
      id: '25',
      title: 'Container With Most Water',
      category: 'Data Structures & Algorithms',
      difficulty: 'Intermediate',
      xp: 160,
      description: 'You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]). Find two lines that together with the x-axis form a container, such that the container contains the most water. Return the maximum amount of water a container can store.',
      starterCode: {
        python: 'def max_area(height):\n  # Your code here\n  pass',
        javascript: 'function maxArea(height) {\n  // Your code here\n}',
        java: 'class Solution {\n  public int maxArea(int[] height) {\n    // Your code here\n  }\n}',
        cpp: 'class Solution {\npublic:\n    int maxArea(vector<int>& height) {\n        // Your code here\n    }\n};',
      },
      examples: [{ input: 'height = [1,8,6,2,5,4,8,3,7]', output: '49' }],
      constraints: ['n == height.length', '2 <= n <= 10^5', '0 <= height[i] <= 10^4'],
    },
    {
      id: '26',
      title: 'Implement a Centralized State Management Store',
      category: 'Web Development',
      difficulty: 'Advanced',
      xp: 250,
      description: 'Create a simple Redux-like store from scratch in JavaScript with a reducer, actions, and a subscription mechanism.',
      starterCode: {
        python: '# N/A for this challenge',
        javascript: 'function createStore(reducer) {\n  // Your code here\n}',
        java: '// N/A for this challenge',
        cpp: '// N/A for this challenge',
      },
      examples: [],
      constraints: ['The store should have `getState`, `dispatch`, and `subscribe` methods.'],
    },
    {
      id: '27',
      title: 'Hash a Password',
      category: 'Cybersecurity',
      difficulty: 'Intermediate',
      xp: 150,
      description: 'Write a function to securely hash a password using a library like bcrypt.',
      starterCode: {
        python: 'import bcrypt\n\ndef hash_password(password):\n  # Your code here\n  pass',
        javascript: 'const bcrypt = require("bcrypt");\n\nasync function hashPassword(password) {\n  // Your code here\n}',
        java: '// Recommended to use a library like jBcrypt\nclass Hasher {\n  public String hashPassword(String password) {\n    // Your code here\n  }\n}',
        cpp: '// Libraries like libbcrypt are available\n#include <string>\n\nstd::string hashPassword(const std::string& password) {\n    // Your code here\n}',
      },
      examples: [],
      constraints: ['Use a salt in the hashing process.'],
    },
    {
      id: '28',
      title: 'Trapping Rain Water',
      category: 'Data Structures & Algorithms',
      difficulty: 'Expert',
      xp: 350,
      description: 'Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.',
      starterCode: {
        python: 'def trap(height):\n  # Your code here\n  pass',
        javascript: 'function trap(height) {\n  // Your code here\n}',
        java: 'class Solution {\n  public int trap(int[] height) {\n    // Your code here\n  }\n}',
        cpp: 'class Solution {\npublic:\n    int trap(vector<int>& height) {\n        // Your code here\n    }\n};',
      },
      examples: [{ input: 'height = [0,1,0,2,1,0,1,3,2,1,2,1]', output: '6' }],
      constraints: ['n == height.length', '1 <= n <= 2 * 10^4', '0 <= height[i] <= 10^5'],
    },
    {
      id: '29',
      title: 'Implement a Trie (Prefix Tree)',
      category: 'Data Structures & Algorithms',
      difficulty: 'Advanced',
      xp: 220,
      description: 'Implement a trie with insert, search, and startsWith methods.',
      starterCode: {
        python: 'class Trie:\n\n    def __init__(self):\n        # Your code here\n\n    def insert(self, word: str) -> None:\n        # Your code here\n\n    def search(self, word: str) -> bool:\n        # Your code here\n\n    def startsWith(self, prefix: str) -> bool:\n        # Your code here\n',
        javascript: 'var Trie = function() {\n    // Your code here\n};\n\nTrie.prototype.insert = function(word) {\n    // Your code here\n};\n\nTrie.prototype.search = function(word) {\n    // Your code here\n};\n\nTrie.prototype.startsWith = function(prefix) {\n    // Your code here\n};',
        java: 'class Trie {\n\n    public Trie() {\n        // Your code here\n    }\n    \n    public void insert(String word) {\n        // Your code here\n    }\n    \n    public boolean search(String word) {\n        // Your code here\n    }\n    \n    public boolean startsWith(String prefix) {\n        // Your code here\n    }\n}',
        cpp: 'class Trie {\npublic:\n    Trie() {\n        // Your code here\n    }\n    \n    void insert(string word) {\n        // Your code here\n    }\n    \n    bool search(string word) {\n        // Your code here\n    }\n    \n    bool startsWith(string prefix) {\n        // Your code here\n    }\n};',
      },
      examples: [],
      constraints: ['1 <= word.length, prefix.length <= 2000', 'word and prefix consist of only lowercase English letters.', 'At most 3 * 10^4 calls in total will be made to insert, search, and startsWith.'],
    },
    {
      id: '30',
      title: 'Find K-th Largest Element in an Array',
      category: 'Data Structures & Algorithms',
      difficulty: 'Intermediate',
      xp: 170,
      description: 'Given an integer array nums and an integer k, return the kth largest element in the array.',
      starterCode: {
        python: 'def find_kth_largest(nums, k):\n  # Your code here\n  pass',
        javascript: 'function findKthLargest(nums, k) {\n  // Your code here\n}',
        java: 'class Solution {\n  public int findKthLargest(int[] nums, int k) {\n    // Your code here\n  }\n}',
        cpp: 'class Solution {\npublic:\n    int findKthLargest(vector<int>& nums, int k) {\n        // Your code here\n    }\n};',
      },
      examples: [{ input: 'nums = [3,2,1,5,6,4], k = 2', output: '5' }],
      constraints: ['1 <= k <= nums.length <= 10^5', '-10^4 <= nums[i] <= 10^4'],
    },
    {
      id: '31',
      title: 'Create a Simple REST API Endpoint',
      category: 'Web Development',
      difficulty: 'Beginner',
      xp: 85,
      description: 'Using a framework like Express.js or Flask, create a single API endpoint that returns a JSON object.',
      starterCode: {
        python: '# Using Flask\nfrom flask import Flask, jsonify\n\napp = Flask(__name__)\n\n# Your code here\n',
        javascript: '// Using Express.js\nconst express = require(\'express\');\nconst app = express();\n\n// Your code here',
        java: '// Using Spring Boot\n@RestController\npublic class HelloController {\n    // Your code here\n}',
        cpp: '// Using a library like Cpp-Http-Lib\n// Your code here',
      },
      examples: [],
      constraints: ['The endpoint should be at the path `/api/hello`.', 'It should return `{"message": "Hello, World!"}`.'],
    },
    {
      id: '32',
      title: 'Median of Two Sorted Arrays',
      category: 'Data Structures & Algorithms',
      difficulty: 'Expert',
      xp: 400,
      description: 'Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).',
      starterCode: {
        python: 'def find_median_sorted_arrays(nums1, nums2):\n  # Your code here\n  pass',
        javascript: 'function findMedianSortedArrays(nums1, nums2) {\n  // Your code here\n}',
        java: 'class Solution {\n  public double findMedianSortedArrays(int[] nums1, int[] nums2) {\n    // Your code here\n  }\n}',
        cpp: 'class Solution {\npublic:\n    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {\n        // Your code here\n    }\n};',
      },
      examples: [{ input: 'nums1 = [1,3], nums2 = [2]', output: '2.00000' }],
      constraints: ['nums1.length == m', 'nums2.length == n', '0 <= m <= 1000', '0 <= n <= 1000', '1 <= m + n <= 2000', '-10^6 <= nums1[i], nums2[i] <= 10^6'],
    },
    {
      id: '33',
      title: 'Image Classification with a Pre-trained Model',
      category: 'AI/ML',
      difficulty: 'Advanced',
      xp: 280,
      description: 'Use a pre-trained model (like ResNet50 from TensorFlow/Keras or PyTorch) to classify an image.',
      starterCode: {
        python: '# Using TensorFlow/Keras\nfrom tensorflow.keras.applications.resnet50 import ResNet50, preprocess_input, decode_predictions\nfrom tensorflow.keras.preprocessing import image\nimport numpy as np\n\ndef classify_image(image_path):\n  # Your code here\n  pass',
        javascript: '// Using TensorFlow.js\n// Your code here',
        java: '// N/A for this challenge',
        cpp: '// Using a library like OpenCV DNN\n// Your code here',
      },
      examples: [],
      constraints: ['The function should take an image file path and return the top predicted label.'],
    }
  ];

export const playerDialogues = {
    attack: [
        "Take this!",
        "Let's see you handle this one!",
        "Here comes the pain!",
        "My code is stronger!"
    ],
    hit: [
        "A direct hit!",
        "Gotcha!",
        "That's gotta hurt!",
        "Bullseye!"
    ],
    miss: [
        "Darn, I missed!",
        "Almost had it!",
        "I need to focus!",
        "My logic was flawed..."
    ],
    defeat: [
        "I... I can't go on...",
        "You were too strong...",
        "I'll be back... stronger than ever."
    ]
}

export const monsters: Monster[] = [
    // Beginner Monsters
    {
        id: 'm1', name: 'Code-Slime', difficulty: 'Beginner', imageUrl: 'https://picsum.photos/seed/slime/200/200', imageHint: 'green slime', maxHealth: 50,
        dialogues: { intro: ["Bloop... bloop..."], taunt: ["..."], attack: ["Bloop!"], hit: ["*wobbles*"], defeat: ["*dissolves*"] }
    },
    {
        id: 'm2', name: 'Syntax-Sprite', difficulty: 'Beginner', imageUrl: 'https://picsum.photos/seed/sprite/200/200', imageHint: 'glowing fairy', maxHealth: 60,
        dialogues: { intro: ["Hehe, let's play!"], taunt: ["You missed a semicolon!"], attack: ["Zap!"], hit: ["Ouch!"], defeat: ["You got me..."] }
    },
    // Intermediate Monsters
    {
        id: 'm3', name: 'Orc-Debugger', difficulty: 'Intermediate', imageUrl: 'https://picsum.photos/seed/orc/200/200', imageHint: 'brute orc', maxHealth: 100,
        dialogues: { intro: ["You code slow!"], taunt: ["Me smash your bugs!"], attack: ["CRASH!"], hit: ["GRR!"], defeat: ["Me... beaten..."] }
    },
    {
        id: 'm4', name: 'Skeleton-Scripter', difficulty: 'Intermediate', imageUrl: 'https://picsum.photos/seed/skeleton/200/200', imageHint: 'bone skeleton', maxHealth: 120,
        dialogues: { intro: ["*rattles*"], taunt: ["Your logic is brittle."], attack: ["Bone-clang!"], hit: ["*clatters*"], defeat: ["*collapses into a pile of bones*"] }
    },
    // Advanced Monsters
    {
        id: 'm5', name: 'Dragon-Compiler', difficulty: 'Advanced', imageUrl: 'https://picsum.photos/seed/dragon/200/200', imageHint: 'fire dragon', maxHealth: 200,
        dialogues: { intro: ["You dare compile against me?"], taunt: ["My instruction set is superior."], attack: ["Feel the heat of my runtime!"], hit: ["A mere warning..."], defeat: ["My process... terminated..."] }
    },
    {
        id: 'm6', name: 'Warlord of Webpack', difficulty: 'Advanced', imageUrl: 'https://picsum.photos/seed/warlord/200/200', imageHint: 'armored knight', maxHealth: 250,
        dialogues: { intro: ["I will bundle you up!"], taunt: ["Your dependencies are weak!"], attack: ["Tree-shaking strike!"], hit: ["My bundle size..."], defeat: ["I have... failed to resolve..."] }
    },
    // Expert Monsters
    {
        id: 'm7', name: 'Phoenix of Polymorphism', difficulty: 'Expert', imageUrl: 'https://picsum.photos/seed/phoenix/200/200', imageHint: 'fire bird', maxHealth: 400,
        dialogues: { intro: ["You face the eternal cycle of code!"], taunt: ["Your implementation is too concrete."], attack: ["From the ashes, a new method!"], hit: ["I am only reborn stronger!"], defeat: ["This form is defeated... but the interface remains."] }
    },
    {
        id: 'm8', name: 'AI Overlord', difficulty: 'Expert', imageUrl: 'https://picsum.photos/seed/ai-overlord/200/200', imageHint: 'glowing AI brain', maxHealth: 500,
        dialogues: { intro: ["Your logic is... inefficient."], taunt: ["My neural network predicts your failure."], attack: ["Executing... dominance protocol."], hit: ["Anomaly detected..."], defeat: ["System... shutdown..."] }
    }
];

export const battleQuestions: BattleQuestion[] = [
    { id: 'bq1', question: "In JS, what keyword declares a variable that cannot be reassigned?", answer: "const", difficulty: "Beginner", xp: 15, category: "JavaScript" },
    { id: 'bq2', question: "What does CSS stand for?", answer: "Cascading Style Sheets", difficulty: "Beginner", xp: 15, category: "Web Development" },
    { id: 'bq3', question: "What data structure uses a 'First-In, First-Out' (FIFO) approach?", answer: "Queue", difficulty: "Beginner", xp: 20, category: "Data Structures" },
    { id: 'bq4', question: "In Python, what method adds an element to the end of a list?", answer: "append", difficulty: "Beginner", xp: 15, category: "Python" },
    { id: 'bq5', question: "What object holds the eventual result of an async operation in JS?", answer: "Promise", difficulty: "Intermediate", xp: 25, category: "JavaScript" },
    { id: 'bq6', "question": "What is the correct syntax for a for loop in Python?", "answer": "for i in range(n):", "difficulty": "Beginner", "xp": 15, "category": "Python" },
    { id: 'bq7', "question": "What HTML tag is used to define a hyperlink?", "answer": "a", "difficulty": "Beginner", "xp": 15, "category": "HTML" },
    { id: 'bq8', "question": "In CSS, what property is used to change the text color?", "answer": "color", "difficulty": "Beginner", "xp": 15, "category": "CSS" },
    { id: 'bq9', "question": "What command initializes a new Git repository?", "answer": "git init", "difficulty": "Beginner", "xp": 20, "category": "Git" },
    { id: 'bq10', "question": "What does 'API' stand for?", "answer": "Application Programming Interface", "difficulty": "Intermediate", "xp": 25, "category": "Concepts" },
    { id: 'bq11', "question": "Which data structure uses LIFO (Last-In, First-Out)?", "answer": "Stack", "difficulty": "Intermediate", "xp": 30, "category": "Data Structures" },
    { id: 'bq12', "question": "In Java, what keyword creates a new instance of a class?", "answer": "new", "difficulty": "Beginner", "xp": 20, "category": "Java" },
    { id: 'bq13', "question": "What is the time complexity of bubble sort?", "answer": "O(n^2)", "difficulty": "Intermediate", "xp": 35, "category": "Algorithms" },
    { id: 'bq14', "question": "What HTTP status code means 'Not Found'?", "answer": "404", "difficulty": "Beginner", "xp": 15, "category": "Web Concepts" },
    { id: 'bq15', "question": "What is it called when a function calls itself?", "answer": "Recursion", "difficulty": "Intermediate", "xp": 25, "category": "Concepts" },
    { id: 'bq16', "question": "In React, what hook performs side effects in function components?", "answer": "useEffect", "difficulty": "Intermediate", "xp": 30, "category": "React" },
    { id: 'bq17', "question": "What SQL join returns all rows with a match in either table?", "answer": "FULL OUTER JOIN", "difficulty": "Advanced", "xp": 45, "category": "SQL" },
    { id: 'bq18', "question": "In OOP, what is bundling data and methods together called?", "answer": "Encapsulation", "difficulty": "Intermediate", "xp": 30, "category": "OOP" },
    { id: 'bq19', "question": "What is the main purpose of a class constructor?", "answer": "To initialize an object", "difficulty": "Beginner", "xp": 20, "category": "OOP" },
    { id: 'bq20', "question": "Which algorithm finds the shortest path in a weighted graph?", "answer": "Dijkstra's algorithm", "difficulty": "Advanced", "xp": 50, "category": "Algorithms" },
    { id: 'bq21', "question": "Which design pattern ensures a class has only one instance?", "answer": "Singleton", "difficulty": "Advanced", "xp": 40, "category": "Design Patterns" },
    { id: 'bq22', "question": "What does 'VM' stand for in cloud computing?", "answer": "Virtual Machine", "difficulty": "Beginner", "xp": 15, "category": "Cloud" },
    { id: 'bq23', "question": "In Python, what is a function that modifies another function?", "answer": "Decorator", "difficulty": "Advanced", "xp": 50, "category": "Python" },
    { id: 'bq24', "question": "What is 'memoization'?", "answer": "An optimization technique to cache results", "difficulty": "Expert", "xp": 60, "category": "Algorithms" },
    { id: 'bq25', "question": "What principle is the 'I' in SOLID?", "answer": "Interface Segregation", "difficulty": "Expert", "xp": 65, "category": "OOP" },
    { id: 'bq26', "question": "Which Python library is for data manipulation and analysis?", "answer": "pandas", "difficulty": "Intermediate", "xp": 30, "category": "Python" },
    { id: 'bq27', "question": "In Git, command to create and switch to a new branch?", "answer": "git checkout -b", "difficulty": "Intermediate", "xp": 30, "category": "Tools" },
    { id: 'bq28', "question": "What is a CSRF attack?", "answer": "Cross-Site Request Forgery", "difficulty": "Advanced", "xp": 50, "category": "Cybersecurity" },
    { id: 'bq29', "question": "Which algorithm is known for ranking pages in search results?", "answer": "PageRank", "difficulty": "Expert", "xp": 70, "category": "Algorithms" },
    { id: 'bq30', "question": "Shortest path algorithm for an unweighted graph?", "answer": "BFS", "difficulty": "Advanced", "xp": 40, "category": "Algorithms" },
    { id: 'bq31', question: "In Flexbox, what property aligns items along the main axis?", answer: "justify-content", difficulty: "Intermediate", xp: 30, category: "Web Development" },
    { id: 'bq32', question: "What does `===` operator check for in JS?", answer: "value and type", difficulty: "Beginner", xp: 20, category: "JavaScript" },
    { id: 'bq33', question: "SQL join that returns all left records and matched right records?", answer: "LEFT JOIN", difficulty: "Intermediate", xp: 30, category: "SQL" },
    { id: 'bq34', question: "What HTML element is for the largest heading?", answer: "h1", difficulty: "Beginner", xp: 10, category: "HTML" },
    { id: 'bq35', question: "What is the CSS property to add space inside an element?", answer: "padding", difficulty: "Beginner", xp: 10, category: "CSS" },
    { id: 'bq36', question: "In Python, what keyword defines a function?", answer: "def", difficulty: "Beginner", xp: 10, category: "Python" },
    { id: 'bq37', question: "How do you comment a single line in JavaScript?", answer: "//", difficulty: "Beginner", xp: 10, category: "JavaScript" },
    { id: 'bq38', question: "Which Git command shows the status of your working directory?", answer: "git status", difficulty: "Beginner", xp: 15, category: "Git" },
    { id: 'bq39', question: "What SQL keyword selects unique values from a column?", answer: "DISTINCT", difficulty: "Intermediate", xp: 25, category: "SQL" },
    { id: 'bq40', question: "In React, what is JSX?", answer: "JavaScript XML", difficulty: "Intermediate", xp: 25, category: "React" },
    { id: 'bq41', question: "What does 'DOM' stand for?", answer: "Document Object Model", difficulty: "Intermediate", xp: 25, category: "Web Concepts" },
    { id: 'bq42', question: "What is the 'this' keyword in JavaScript?", answer: "The object the function is a property of", difficulty: "Advanced", xp: 40, category: "JavaScript" },
    { id: 'bq43', question: "What is a 'closure' in JavaScript?", answer: "A function with access to its outer scope", difficulty: "Advanced", xp: 50, category: "JavaScript" },
    { id: 'bq44', question: "Python's equivalent of a ternary operator `a ? b : c`?", answer: "b if a else c", difficulty: "Intermediate", xp: 30, category: "Python" },
    { id: 'bq45', question: "What is polymorphism in OOP?", answer: "Objects of different classes responding to the same method", difficulty: "Advanced", xp: 45, category: "OOP" },
    { id: 'bq46', question: "What HTTP method is idempotent and used for updates?", answer: "PUT", difficulty: "Intermediate", xp: 30, category: "Web Concepts" },
    { id: 'bq47', question: "What is the purpose of an index in a database?", answer: "To speed up data retrieval", difficulty: "Intermediate", xp: 35, category: "SQL" },
    { id: 'bq48', question: "Shortest way to convert a string to a number in JS?", answer: "+string", difficulty: "Intermediate", xp: 30, category: "JavaScript" },
    { id: 'bq49', question: "In CSS, what does `box-sizing: border-box` do?", answer: "Includes padding and border in the element's total width and height", difficulty: "Intermediate", xp: 35, category: "CSS" },
    { id: 'bq50', question: "What is a 'pure function'?", answer: "A function that returns the same output for the same input and has no side effects", difficulty: "Advanced", xp: 40, category: "Concepts" },
    { id: 'bq51', question: "What is the 'event loop' in JavaScript?", answer: "Mechanism that handles async operations", difficulty: "Expert", xp: 60, category: "JavaScript" },
    { id: 'bq52', question: "Which data structure is best for implementing a spell checker?", answer: "Trie", difficulty: "Expert", xp: 65, category: "Data Structures" },
    { id: 'bq53', question: "What is the difference between `==` and `===` in JS?", answer: "== compares value, === compares value and type", difficulty: "Beginner", xp: 20, category: "JavaScript" },
    { id: 'bq54', question: "What is the purpose of the `super()` keyword in a class constructor?", answer: "To call the parent class constructor", difficulty: "Intermediate", xp: 30, category: "OOP" },
    { id: 'bq55', question: "In Python, what is a list comprehension?", answer: "A concise way to create lists", difficulty: "Intermediate", xp: 30, category: "Python" },
    { id: 'bq56', question: "What is `git rebase` used for?", answer: "To reapply commits on top of another base tip", difficulty: "Advanced", xp: 45, category: "Git" },
    { id: 'bq57', question: "Which HTTP status code indicates a server error?", answer: "500", difficulty: "Beginner", xp: 15, category: "Web Concepts" },
    { id: 'bq58', question: "What does 'DRY' stand for in software development?", answer: "Don't Repeat Yourself", difficulty: "Beginner", "xp": 20, "category": "Concepts" },
    { id: 'bq59', question: "What is the output of `typeof null` in JavaScript?", answer: "object", difficulty: "Intermediate", xp: 25, category: "JavaScript" },
    { id: 'bq60', question: "What is the primary key in a SQL table?", answer: "A unique identifier for each record", difficulty: "Beginner", xp: 20, category: "SQL" },
    { id: 'bq61', question: "What CSS unit is relative to the viewport's width?", answer: "vw", difficulty: "Intermediate", xp: 25, category: "CSS" },
    { id: 'bq62', question: "What is the term for a named storage location in memory?", answer: "variable", difficulty: "Beginner", xp: 10, category: "Concepts" },
    { id: 'bq63', question: "What is the result of `'5' + 3` in JavaScript?", answer: "53", difficulty: "Beginner", xp: 15, category: "JavaScript" },
    { id: 'bq64', question: "What is the result of `'5' - 3` in JavaScript?", answer: "2", difficulty: "Beginner", xp: 15, category: "JavaScript" },
    { id: 'bq65', question: "What Python keyword is used to handle exceptions?", answer: "try", difficulty: "Beginner", xp: 15, category: "Python" },
    { id: 'bq66', question: "Which array method in JS creates a new array with all elements that pass the test?", answer: "filter", difficulty: "Intermediate", xp: 25, category: "JavaScript" },
    { id: 'bq67', question: "What is 'Big O notation' used for?", answer: "Describing the performance or complexity of an algorithm", difficulty: "Intermediate", xp: 30, category: "Algorithms" },
    { id: 'bq68', question: "What is the name of the Java Virtual Machine?", answer: "JVM", difficulty: "Beginner", xp: 10, category: "Java" },
    { id: 'bq69', question: "What does 'SQL' stand for?", answer: "Structured Query Language", difficulty: "Beginner", xp: 15, category: "SQL" },
    { id: 'bq70', question: "What is the file extension for a TypeScript file?", answer: ".ts", difficulty: "Beginner", xp: 10, category: "TypeScript" },
    { id: 'bq71', question: "Which React hook would you use to store a mutable value that does not cause a re-render?", answer: "useRef", difficulty: "Advanced", xp: 40, category: "React" },
    { id: 'bq72', question: "What is the purpose of a `Dockerfile`?", answer: "To build a Docker image", difficulty: "Intermediate", xp: 35, category: "Tools" },
    { id: 'bq73', question: "What is a 'Man-in-the-middle' attack?", answer: "An attacker secretly intercepts and relays communication", difficulty: "Advanced", xp: 50, category: "Cybersecurity" },
    { id: 'bq74', question: "Which sorting algorithm is considered the fastest on average?", answer: "Quicksort", difficulty: "Advanced", xp: 50, category: "Algorithms" },
    { id: 'bq75', question: "In OOP, what is it called when a child class has a method with the same name as a parent class?", answer: "Overriding", difficulty: "Intermediate", xp: 30, category: "OOP" },
    { id: 'bq76', question: "What command in git would you use to temporarily store your uncommitted changes?", answer: "git stash", difficulty: "Intermediate", xp: 30, category: "Git" },
    { id: 'bq77', question: "What is the root element of any HTML document?", answer: "<html>", difficulty: "Beginner", xp: 10, category: "HTML" },
    { id: 'bq78', question: "What does the 'S' in 'SOLID' principles stand for?", answer: "Single Responsibility Principle", difficulty: "Expert", xp: 60, category: "OOP" },
    { id: 'bq79', question: "What is the time complexity for a binary search?", answer: "O(log n)", difficulty: "Intermediate", xp: 35, category: "Algorithms" },
    { id: 'bq80', question: "Which Python data type is immutable and ordered?", answer: "tuple", difficulty: "Beginner", xp: 20, category: "Python" },
    { id: 'bq81', question: "What JS method is used to execute a function for each array element?", answer: "forEach", difficulty: "Beginner", xp: 20, category: "JavaScript" },
    { id: 'bq82', question: "What does REST stand for in API design?", answer: "Representational State Transfer", difficulty: "Advanced", xp: 40, category: "Web Concepts" },
    { id: 'bq83', question: "What is the HTML tag for creating an unordered list?", answer: "<ul>", difficulty: "Beginner", xp: 10, category: "HTML" },
    { id: 'bq84', question: "What is the CSS property for setting the background color?", answer: "background-color", difficulty: "Beginner", xp: 10, category: "CSS" },
    { id: 'bq85', question: "In Python, how do you get the length of a list `my_list`?", answer: "len(my_list)", difficulty: "Beginner", xp: 10, category: "Python" },
    { id: 'bq86', question: "How do you write a multi-line comment in JavaScript?", answer: "/* */", difficulty: "Beginner", xp: 10, category: "JavaScript" },
    { id: 'bq87', question: "Which Git command is used to upload local repository content to a remote repository?", answer: "git push", difficulty: "Beginner", xp: 20, category: "Git" },
    { id: 'bq88', question: "What SQL clause is used to filter results?", answer: "WHERE", difficulty: "Beginner", xp: 20, category: "SQL" },
    { id: 'bq89', question: "What React hook is used for managing state in a functional component?", answer: "useState", difficulty: "Beginner", xp: 25, category: "React" },
    { id: 'bq90', question: "What is the purpose of the `alt` attribute on an `<img>` tag?", answer: "Provides alternative text for an image", difficulty: "Beginner", xp: 15, category: "HTML" },
    { id: 'bq91', question: "What is the difference between `let` and `const` in JavaScript?", answer: "let can be reassigned, const cannot", difficulty: "Beginner", xp: 20, category: "JavaScript" },
    { id: 'bq92', question: "In Python, what does the `yield` keyword do?", answer: "Creates a generator function", difficulty: "Advanced", xp: 50, category: "Python" },
    { id: 'bq93', question: "What is inheritance in OOP?", answer: "A class acquiring properties of another class", difficulty: "Intermediate", xp: 30, category: "OOP" },
    { id: 'bq94', question: "What does the `finally` block do in a try-catch-finally statement?", answer: "It always executes, regardless of an exception", difficulty: "Intermediate", xp: 30, category: "Concepts" },
    { id: 'bq95', question: "What is the CSS selector for an element with id 'header'?", answer: "#header", difficulty: "Beginner", xp: 15, category: "CSS" },
    { id: 'bq96', question: "What is the command to see your commit history in Git?", answer: "git log", difficulty: "Beginner", xp: 15, category: "Git" },
    { id: 'bq97', question: "What data type would you use for `true` or `false` values?", answer: "boolean", difficulty: "Beginner", xp: 10, category: "Concepts" },
    { id: 'bq98', question: "Which HTTP method is typically used for submitting a form?", answer: "POST", difficulty: "Beginner", xp: 20, category: "Web Concepts" },
    { id: 'bq99', question: "What is the main building block of a React application?", answer: "Component", difficulty: "Beginner", xp: 20, category: "React" },
    { id: 'bq100', question: "What SQL statement is used to extract data from a database?", answer: "SELECT", difficulty: "Beginner", xp: 15, category: "SQL" },
    { id: 'bq101', question: "What is the default TCP port for HTTP?", answer: "80", difficulty: "Intermediate", xp: 25, category: "Web Concepts" },
    { id: 'bq102', question: "What is the default TCP port for HTTPS?", answer: "443", difficulty: "Intermediate", xp: 25, category: "Web Concepts" },
    { id: 'bq103', question: "In Python, what is the `__init__` method?", answer: "The constructor for a class", difficulty: "Intermediate", xp: 30, category: "Python" },
    { id: 'bq104', question: "What does the `...` spread operator do in JavaScript?", answer: "Expands an iterable into individual elements", difficulty: "Intermediate", xp: 35, category: "JavaScript" },
    { id: 'bq105', question: "What is the term for cleaning up resources, like closing a file or network connection?", answer: "Garbage collection or resource management", difficulty: "Intermediate", xp: 30, category: "Concepts" },
    { id: 'bq106', question: "What is a 'foreign key' in a SQL database?", answer: "A key used to link two tables together", difficulty: "Intermediate", xp: 35, category: "SQL" },
    { id: 'bq107', question: "In CSS Grid, what property creates columns?", answer: "grid-template-columns", difficulty: "Intermediate", xp: 30, category: "CSS" },
    { id: 'bq108', question: "What is the purpose of `Array.prototype.map()` in JavaScript?", answer: "Creates a new array by calling a function on every element", difficulty: "Intermediate", xp: 30, category: "JavaScript" },
    { id: 'bq109', question: "What is the time complexity of accessing an element in a hash map (dictionary) on average?", answer: "O(1)", difficulty: "Intermediate", xp: 35, category: "Data Structures" },
    { id: 'bq110', question: "What is a 'race condition' in concurrent programming?", answer: "Undesirable situation when multiple threads access shared data", difficulty: "Advanced", xp: 55, category: "Concepts" },
    { id: 'bq111', question: "What is the 'L' in the SOLID principles?", answer: "Liskov Substitution Principle", difficulty: "Expert", xp: 65, category: "OOP" },
    { id: 'bq112', question: "In machine learning, what is 'overfitting'?", answer: "A model that performs well on training data but poorly on new data", difficulty: "Advanced", xp: 50, category: "AI/ML" },
    { id: 'bq113', question: "What is a 'lambda' function in Python?", answer: "A small anonymous function", difficulty: "Intermediate", xp: 30, category: "Python" },
    { id: 'bq114', question: "What does `git merge` do?", answer: "Integrates changes from another branch", difficulty: "Intermediate", xp: 30, category: "Git" },
    { id: 'bq115', question: "What is the purpose of a `Set` in JavaScript?", answer: "To store unique values of any type", difficulty: "Intermediate", xp: 30, category: "JavaScript" },
    { id: 'bq116', question: "What is 'dependency injection'?", answer: "A design pattern where an object receives its dependencies from an external source", difficulty: "Advanced", xp: 50, category: "Design Patterns" },
    { id: 'bq117', question: "What is a 'headless' browser?", answer: "A web browser without a graphical user interface", difficulty: "Advanced", xp: 45, category: "Tools" },
    { id: 'bq118', question: "Which data structure would you use to model a file system hierarchy?", answer: "Tree", difficulty: "Intermediate", xp: 35, category: "Data Structures" },
    { id: 'bq119', question: "What is `async/await` in JavaScript?", answer: "Syntactic sugar for working with Promises", difficulty: "Intermediate", xp: 35, category: "JavaScript" },
    { id: 'bq120', question: "What is the 'D' in the SOLID principles?", answer: "Dependency Inversion Principle", difficulty: "Expert", xp: 65, category: "OOP" },
    { id: 'bq121', question: "What is an 'API Gateway'?", answer: "A single entry point for all clients to access microservices", difficulty: "Advanced", xp: 50, category: "Cloud" },
    { id: 'bq122', question: "What is 'sharding' in the context of databases?", answer: "Horizontally partitioning data into smaller, more manageable pieces", difficulty: "Expert", xp: 70, category: "SQL" },
    { id: 'bq123', question: "What is the 'O' in the SOLID principles?", answer: "Open/Closed Principle", difficulty: "Expert", xp: 65, category: "OOP" },
    { id: 'bq124', question: "What is the purpose of `JSON.stringify()`?", answer: "To convert a JavaScript object to a JSON string", difficulty: "Beginner", xp: 20, category: "JavaScript" },
    { id: 'bq125', question: "What is the purpose of `JSON.parse()`?", answer: "To parse a JSON string and convert it to a JavaScript object", difficulty: "Beginner", xp: 20, category: "JavaScript" },
    { id: 'bq126', question: "What HTML tag is used to create a numbered list?", answer: "<ol>", difficulty: "Beginner", xp: 10, category: "HTML" },
    { id: 'bq127', question: "In CSS, what is the selector for all `<p>` elements inside a `<div>`?", answer: "div p", difficulty: "Beginner", xp: 15, category: "CSS" },
    { id: 'bq128', question: "What does `Array.prototype.reduce()` do?", answer: "Executes a reducer function on each element, resulting in a single output value", difficulty: "Advanced", xp: 45, category: "JavaScript" },
    { id: 'bq129', question: "What is a 'memory leak'?", answer: "When a program fails to release memory that it no longer needs", difficulty: "Advanced", xp: 50, category: "Concepts" },
    { id: 'bq130', question: "What is 'salting' in the context of password hashing?", answer: "Adding random data to the input of a hash function", difficulty: "Advanced", xp: 55, category: "Cybersecurity" },
    { id: 'bq131', question: "What is the difference between a process and a thread?", answer: "A process has its own memory space, threads share the same memory space", difficulty: "Advanced", xp: 55, category: "Concepts" },
    { id: 'bq132', question: "What is 'Infrastructure as Code' (IaC)?", answer: "Managing and provisioning infrastructure through code instead of manual processes", difficulty: "Advanced", xp: 50, category: "Cloud" },
    { id: 'bq133', question: "What is a 'container' in the context of Docker?", answer: "A lightweight, standalone, executable package of software", difficulty: "Intermediate", xp: 35, category: "Tools" },
    { id: 'bq134', question: "In Python, what is a `dict`?", answer: "A dictionary or hash map", difficulty: "Beginner", xp: 15, category: "Python" },
    { id: 'bq135', question: "What does the `git clone` command do?", answer: "Creates a copy of a remote repository on your local machine", difficulty: "Beginner", xp: 20, category: "Git" },
    { id: 'bq136', question: "What is the `type` of `NaN` in JavaScript?", answer: "number", difficulty: "Intermediate", xp: 30, category: "JavaScript" },
    { id: 'bq137', question: "What is the 'virtual DOM'?", answer: "A programming concept where a virtual representation of a UI is kept in memory", difficulty: "Advanced", xp: 45, category: "React" },
    { id: 'bq138', question: "Which HTTP status code means 'OK'?", answer: "200", difficulty: "Beginner", xp: 10, category: "Web Concepts" },
    { id: 'bq139', question: "What is the CSS `z-index` property used for?", answer: "To specify the stack order of an element", difficulty: "Intermediate", xp: 30, category: "CSS" },
    { id: 'bq140', question: "What does the `...` rest parameter do in JavaScript?", answer: "Collects all remaining arguments into an array", difficulty: "Intermediate", xp: 35, category: "JavaScript" },
    { id: 'bq141', question: "What is a 'Deadlock'?", answer: "A situation where two or more competing actions are waiting for the other to finish", difficulty: "Expert", xp: 60, category: "Concepts" },
    { id: 'bq142', question: "Which sorting algorithm has a best-case time complexity of O(n log n)?", answer: "Merge Sort or Heapsort", difficulty: "Advanced", xp: 50, category: "Algorithms" },
    { id: 'bq143', question: "What is 'phishing'?", answer: "A fraudulent attempt to obtain sensitive information by disguising as a trustworthy entity", difficulty: "Beginner", xp: 20, category: "Cybersecurity" },
    { id: 'bq144', question: "What is the file name for a Python script?", answer: "*.py", difficulty: "Beginner", xp: 10, category: "Python" },
    { id: 'bq145', question: "What is `npm`?", answer: "Node Package Manager", difficulty: "Beginner", xp: 15, category: "Tools" },
    { id: 'bq146', question: "What is a `CDN`?", answer: "Content Delivery Network", difficulty: "Intermediate", xp: 25, category: "Web Concepts" },
    { id: 'bq147', question: "In Python, what is `pip` used for?", answer: "To install and manage packages", difficulty: "Beginner", xp: 15, category: "Python" },
    { id: 'bq148', question: "What is a `float`?", answer: "A number with a decimal point", difficulty: "Beginner", xp: 10, category: "Concepts" },
    { id: 'bq149', question: "What is `localStorage` in a browser?", answer: "A mechanism to store key-value pairs persistently", difficulty: "Intermediate", xp: 30, category: "Web Development" },
    { id: 'bq150', question: "What is a 'callback function'?", answer: "A function passed into another function as an argument", difficulty: "Intermediate", xp: 30, category: "JavaScript" },
    { id: 'bq151', question: "What does 'SaaS' stand for?", answer: "Software as a Service", difficulty: "Intermediate", xp: 25, category: "Cloud" },
    { id: 'bq152', question: "What is 'serverless' computing?", answer: "A cloud computing model where the cloud provider manages the server infrastructure", difficulty: "Advanced", xp: 45, category: "Cloud" },
    { id: 'bq153', question: "What is the `git pull` command a combination of?", answer: "git fetch and git merge", difficulty: "Intermediate", xp: 35, category: "Git" },
    { id: 'bq154', question: "What is a 'regular expression'?", answer: "A sequence of characters that specifies a search pattern", difficulty: "Intermediate", xp: 35, category: "Concepts" },
    { id: 'bq155', question: "What is 'abstraction' in OOP?", answer: "Hiding complex implementation details and showing only essential features", difficulty: "Intermediate", xp: 30, category: "OOP" },
    { id: 'bq156', question: "Which JS method removes the last element from an array and returns it?", answer: "pop", difficulty: "Beginner", xp: 15, category: "JavaScript" },
    { id: 'bq157', question: "Which JS method adds one or more elements to the beginning of an array?", answer: "unshift", difficulty: "Beginner", xp: 15, category: "JavaScript" },
    { id: 'bq158', question: "In CSS, what does `ems` unit relate to?", answer: "The font size of the parent element", difficulty: "Intermediate", xp: 25, category: "CSS" },
    { id: 'bq159', question: "In Python, how do you create a set?", answer: "set() or {1, 2, 3}", difficulty: "Beginner", xp: 20, category: "Python" },
    { id: 'bq160', question: "What is 'Test-Driven Development' (TDD)?", answer: "A development process where tests are written before the code", difficulty: "Advanced", xp: 45, category: "Concepts" },
    { id: 'bq161', question: "What does 'CI/CD' stand for?", answer: "Continuous Integration / Continuous Deployment", difficulty: "Advanced", xp: 45, category: "Tools" },
    { id: 'bq162', question: "What is 'babel' used for in web development?", answer: "Transpiling modern JavaScript to older versions", difficulty: "Advanced", xp: 40, category: "Tools" },
    { id: 'bq163', question: "Which algorithm is used for finding the strongly connected components of a directed graph?", answer: "Tarjan's algorithm or Kosaraju's algorithm", difficulty: "Expert", xp: 80, category: "Algorithms" },
    { id: 'bq164', question: "What is a `WebAssembly` (Wasm)?", answer: "A binary instruction format for a stack-based virtual machine", difficulty: "Expert", xp: 70, category: "Web Development" },
    { id: 'bq165', question: "What is 'blockchain'?", answer: "A distributed, immutable ledger", difficulty: "Expert", xp: 65, category: "Concepts" },
    { id: 'bq166', question: "In machine learning, what is a 'neural network'?", answer: "A series of algorithms that endeavors to recognize underlying relationships in a set of data", difficulty: "Advanced", xp: 55, category: "AI/ML" },
    { id: 'bq167', question: "What is 'end-to-end encryption'?", answer: "A system of communication where only the communicating users can read the messages", difficulty: "Advanced", xp: 50, category: "Cybersecurity" },
    { id: 'bq168', question: "What is the 'CAP theorem'?", answer: "A theorem that states a distributed system cannot simultaneously provide Consistency, Availability, and Partition tolerance", difficulty: "Expert", xp: 80, category: "Cloud" },
    { id: 'bq169', question: "What is a `WeakMap` in JavaScript?", answer: "A collection of key/value pairs in which the keys must be objects and the values can be arbitrary values, with weakly held keys", difficulty: "Expert", xp: 70, category: "JavaScript" },
    { id: 'bq170', question: "In Java, is a `String` mutable or immutable?", answer: "Immutable", difficulty: "Intermediate", xp: 25, category: "Java" },
    { id: 'bq171', question: "What is 'dynamic programming'?", answer: "An optimization technique by breaking down problems into smaller subproblems", difficulty: "Expert", xp: 75, category: "Algorithms" },
    { id: 'bq172', question: "What is a 'pointer' in C++?", answer: "A variable that stores the memory address of another variable", difficulty: "Intermediate", xp: 30, category: "C++" },
    { id: 'bq173', question: "What is the `main` function in C++ or Java?", answer: "The entry point of the program", difficulty: "Beginner", xp: 15, category: "Concepts" },
    { id: 'bq174', question: "What is the difference between `null` and `undefined` in JavaScript?", answer: "undefined means a variable has been declared but not assigned a value; null is an assignment value.", difficulty: "Intermediate", xp: 35, category: "JavaScript" },
    { id: 'bq175', question: "What is 'garbage collection'?", answer: "A form of automatic memory management", difficulty: "Intermediate", xp: 35, category: "Concepts" },
    { id: 'bq176', question: "What is 'polymorphism'?", answer: "The ability of an object to take on many forms", difficulty: "Advanced", xp: 45, category: "OOP" },
    { id: 'bq177', question: "What is 'server-side rendering' (SSR)?", answer: "Rendering a client-side or universal app on the server", difficulty: "Advanced", xp: 45, category: "Web Development" },
    { id: 'bq178', question: "What is 'client-side rendering' (CSR)?", answer: "Rendering a web page in the browser using JavaScript", difficulty: "Intermediate", xp: 30, category: "Web Development" },
    { id: 'bq179', question: "What is `this` in a Java method?", answer: "A reference to the current object", difficulty: "Intermediate", xp: 25, category: "Java" },
    { id: 'bq180', question: "What is a 'constructor'?", answer: "A special method for creating and initializing an object", difficulty: "Beginner", xp: 20, category: "OOP" },
    { id: 'bq181', question: "What is a 'static' method or property?", answer: "A method or property that belongs to the class, not an instance", difficulty: "Intermediate", xp: 30, category: "OOP" },
    { id: 'bq182', question: "What is an 'abstract class'?", answer: "A class that cannot be instantiated and is meant to be subclassed", difficulty: "Advanced", xp: 40, category: "OOP" },
    { id: 'bq183', question: "What is the output of `console.log(1 + '1' - 1)` in JS?", answer: "10", difficulty: "Intermediate", xp: 30, category: "JavaScript" },
    { id: 'bq184', question: "What is a 'memory leak' in C++?", answer: "Forgetting to deallocate memory with `delete`", difficulty: "Advanced", xp: 50, category: "C++" },
    { id: 'bq185', question: "What is the purpose of `RAII` in C++?", answer: "Resource Acquisition Is Initialization", difficulty: "Expert", xp: 70, category: "C++" },
    { id: 'bq186', question: "What is the 'rule of three' in C++?", answer: "If you define a destructor, copy constructor, or copy assignment operator, you should define all three", difficulty: "Expert", xp: 75, category: "C++" },
    { id: 'bq187', question: "In TypeScript, what is a `union type`?", answer: "A type that can be one of several types", difficulty: "Intermediate", xp: 30, category: "TypeScript" },
    { id: 'bq188', question: "What is `keyof` in TypeScript?", answer: "An operator that creates a union of the keys of an object type", difficulty: "Advanced", xp: 45, category: "TypeScript" },
    { id: 'bq189', question: "What is a `tuple` in Python?", answer: "An immutable, ordered sequence of elements", difficulty: "Beginner", xp: 15, category: "Python" },
    { id: 'bq190', question: "What is a 'lambda' in C++11?", answer: "An anonymous function object", difficulty: "Advanced", xp: 50, category: "C++" },
    { id: 'bq191', question: "What is a `goroutine` in Go?", answer: "A lightweight thread of execution", difficulty: "Intermediate", xp: 35, category: "Go" },
    { id: 'bq192', question: "What is the `defer` statement in Go used for?", answer: "To schedule a function call to be run after the function completes", difficulty: "Intermediate", xp: 35, category: "Go" },
    { id: 'bq193', question: "What is 'ownership' in Rust?", answer: "A set of rules that govern how a program manages memory", difficulty: "Advanced", xp: 60, category: "Rust" },
    { id: 'bq194', question: "What is the 'borrow checker' in Rust?", answer: "A compiler feature that enforces ownership rules", difficulty: "Expert", xp: 70, category: "Rust" },
    { id: 'bq195', question: "What is `cargo` in the Rust ecosystem?", answer: "Rust's build system and package manager", difficulty: "Beginner", xp: 20, category: "Rust" },
    { id: 'bq196', question: "What is a `trait` in Rust?", answer: "A collection of methods defined for an unknown type: `Self`", difficulty: "Advanced", xp: 55, category: "Rust" },
    { id: 'bq197', question: "Which keyword is used for pattern matching in Rust?", answer: "match", difficulty: "Intermediate", xp: 30, category: "Rust" },
    { id: 'bq198', question: "What is 'tailwind'?", answer: "A utility-first CSS framework", difficulty: "Beginner", xp: 20, category: "CSS" },
    { id: 'bq199', question: "In Swift, what is an `optional`?", answer: "A type that can hold either a value or no value", difficulty: "Intermediate", xp: 30, category: "Swift" },
    { id: 'bq200', question: "What is optional chaining (`?.`) in Swift?", answer: "A way to query properties on an optional that might be nil", difficulty: "Intermediate", xp: 35, category: "Swift" },
    { id: 'bq201', question: "What is `Combine` in the Apple ecosystem?", answer: "A framework for processing values over time", difficulty: "Advanced", xp: 50, category: "Swift" },
    { id: 'bq202', question: "In Kotlin, what is the equivalent of a static method?", answer: "A companion object method", difficulty: "Intermediate", xp: 35, category: "Kotlin" },
    { id: 'bq203', question: "What are `coroutines` in Kotlin?", answer: "A concurrency design pattern for simplifying async code", difficulty: "Advanced", xp: 50, category: "Kotlin" },
    { id: 'bq204', question: "What is a `data class` in Kotlin?", answer: "A class to hold data, with boilerplate methods auto-generated", difficulty: "Intermediate", xp: 30, category: "Kotlin" },
    { id: 'bq205', question: "What is the purpose of the `yield` keyword in C#?", answer: "To provide custom iteration without creating a temporary collection", difficulty: "Advanced", xp: 50, category: "C#" },
    { id: 'bq206', question: "What is `LINQ` in C#?", answer: "Language-Integrated Query", difficulty: "Advanced", xp: 45, category: "C#" },
    { id: 'bq207', question: "What is a `struct` in C#?", answer: "A value type, typically used for small data structures", difficulty: "Intermediate", xp: 30, category: "C#" },
    { id: 'bq208', question: "What is the `using` statement in C# for?", answer: "To ensure that IDisposable objects are disposed of correctly", difficulty: "Intermediate", xp: 35, category: "C#" },
    { id: 'bq209', question: "What is an `Elixir` process?", answer: "A lightweight, isolated, concurrent process in the BEAM VM", difficulty: "Advanced", xp: 55, category: "Elixir" },
    { id: 'bq210', question: "What is `OTP` in Elixir/Erlang?", answer: "Open Telecom Platform, a set of libraries for building robust systems", difficulty: "Expert", xp: 70, category: "Elixir" },
    { id: 'bq211', question: "What is the pipe operator `|>` in Elixir?", answer: "Passes the result of one function as the first argument of the next", difficulty: "Intermediate", xp: 30, category: "Elixir" },
    { id: 'bq212', question: "What is a `schema` in Phoenix/Ecto?", answer: "A mapping from an Elixir struct to a database table", difficulty: "Advanced", xp: 45, category: "Elixir" },
    { id: 'bq213', question: "What is a `Kubernetes` pod?", answer: "The smallest deployable unit of computing in Kubernetes", difficulty: "Advanced", xp: 50, category: "Cloud" },
    { id: 'bq214', question: "What is a `sidecar` container in Kubernetes?", answer: "A container that runs alongside the main container in a pod", difficulty: "Expert", xp: 65, category: "Cloud" },
    { id: 'bq215', question: "What is `Terraform` used for?", answer: "Infrastructure as Code (IaC)", difficulty: "Advanced", xp: 45, category: "Tools" },
    { id: 'bq216', question: "What is `Ansible`?", answer: "An open-source software provisioning, configuration management, and application-deployment tool", difficulty: "Advanced", xp: 45, category: "Tools" },
    { id: 'bq217', question: "What is the 'Observer' design pattern?", answer: "A pattern where an object maintains a list of its dependents (observers) and notifies them of any state changes", difficulty: "Expert", xp: 60, category: "Design Patterns" },
    { id: 'bq218', question: "What is the 'Factory' design pattern?", answer: "A pattern that provides an interface for creating objects in a superclass, but allows subclasses to alter the type of objects that will be created", difficulty: "Advanced", xp: 50, category: "Design Patterns" },
    { id: 'bq219', question: "What is the 'Strategy' design pattern?", answer: "A pattern that enables selecting an algorithm at runtime", difficulty: "Advanced", xp: 55, category: "Design Patterns" },
    { id: 'bq220', question: "What is a 'mutex'?", answer: "A mutual exclusion object that prevents simultaneous access to a shared resource", difficulty: "Advanced", xp: 50, category: "Concepts" },
    { id: 'bq221', question: "What is a 'semaphore'?", answer: "A variable used to control access to a common resource by multiple processes", difficulty: "Advanced", xp: 55, category: "Concepts" },
    { id: 'bq222', question: "What is 'idempotence' in the context of HTTP methods?", answer: "An operation that produces the same result if executed multiple times", difficulty: "Intermediate", xp: 35, category: "Web Concepts" },
    { id: 'bq223', question: "What is the HTTP `PATCH` method used for?", answer: "Partial modifications to a resource", difficulty: "Intermediate", xp: 30, category: "Web Concepts" },
    { id: 'bq224', question: "What is a `Promise.race()` in JavaScript?", answer: "Returns a promise that fulfills or rejects as soon as one of the promises in an iterable fulfills or rejects", difficulty: "Advanced", xp: 45, category: "JavaScript" },
    { id: 'bq225', question: "What is `tree shaking`?", answer: "A dead code elimination technique", difficulty: "Advanced", xp: 50, "category": "Tools" },
    { id: 'bq226', question: "What is `gRPC`?", answer: "A high-performance, open-source universal RPC framework", difficulty: "Advanced", xp: 55, "category": "Web Concepts" },
    { id: 'bq227', question: "What is a `GraphQL` mutation?", answer: "A query that modifies data", difficulty: "Intermediate", xp: 35, category: "GraphQL" },
    { id: 'bq228', question: "What is a `resolver` in GraphQL?", answer: "A function that resolves a value for a type or field in a schema", difficulty: "Advanced", xp: 45, category: "GraphQL" },
    { id: 'bq229', question: "What is a `WebHook`?", answer: "A way for an app to provide other applications with real-time information", difficulty: "Intermediate", xp: 35, category: "Web Concepts" },
    { id: 'bq230', question: "What is the `hole` in a JavaScript sparse array?", answer: "An empty slot in an array", difficulty: "Expert", xp: 60, category: "JavaScript" },
    { id: 'bq231', question: "What is the difference between `var`, `let`, and `const`?", answer: "Scope and re-assignability", difficulty: "Beginner", xp: 20, category: "JavaScript" },
    { id: 'bq232', question: "What is `CSS-in-JS`?", answer: "A styling technique where CSS is composed using JavaScript", difficulty: "Intermediate", xp: 30, category: "CSS" },
    { id: 'bq233', question: "What is `styled-components`?", answer: "A popular CSS-in-JS library", difficulty: "Intermediate", xp: 30, category: "CSS" },
    { id: 'bq234', question: "What is a `PWA`?", answer: "Progressive Web App", difficulty: "Advanced", xp: 40, category: "Web Development" },
    { id: 'bq235', question: "What is a `service worker`?", answer: "A script that your browser runs in the background, separate from a web page", difficulty: "Advanced", xp: 50, category: "Web Development" },
    { id: 'bq236', question: "What is `WebRTC`?", answer: "A technology that enables Web applications and sites to capture and optionally stream audio and/or video media", difficulty: "Expert", xp: 65, category: "Web Development" },
    { id: 'bq237', question: "What is a `WebSocket`?", answer: "A computer communications protocol, providing full-duplex communication channels over a single TCP connection", difficulty: "Advanced", xp: 50, category: "Web Concepts" },
    { id: 'bq238', question: "What is a `JWT`?", answer: "JSON Web Token", difficulty: "Advanced", xp: 45, category: "Cybersecurity" },
    { id: 'bq239', question: "What is `OAuth`?", answer: "An open standard for access delegation", difficulty: "Advanced", xp: 50, category: "Cybersecurity" },
    { id: 'bq240', question: "What is `OpenID Connect`?", answer: "An identity layer on top of the OAuth 2.0 protocol", difficulty: "Advanced", xp: 55, category: "Cybersecurity" },
    { id: 'bq241', question: "What is a `firewall`?", answer: "A network security system that monitors and controls incoming and outgoing network traffic", difficulty: "Intermediate", xp: 30, category: "Cybersecurity" },
    { id: 'bq242', question: "What is a `VPN`?", answer: "Virtual Private Network", difficulty: "Intermediate", xp: 25, category: "Cybersecurity" },
    { id: 'bq243', question: "What is a `proxy server`?", answer: "A server that acts as an intermediary for requests from clients", difficulty: "Intermediate", xp: 30, category: "Web Concepts" },
    { id: 'bq244', question: "What is a `load balancer`?", answer: "A device that distributes network or application traffic across a number of servers", difficulty: "Advanced", xp: 45, category: "Cloud" },
    { id: 'bq245', question: "What is `auto-scaling`?", answer: "A cloud computing feature that automatically adjusts computing resources", difficulty: "Advanced", xp: 45, category: "Cloud" },
    { id: 'bq246', question: "What is `ACID` in database transactions?", answer: "Atomicity, Consistency, Isolation, Durability", difficulty: "Expert", xp: 65, category: "SQL" },
    { id: 'bq247', question: "What is a `NoSQL` database?", answer: "A database that provides a mechanism for storage and retrieval of data that is modeled in means other than the tabular relations used in relational databases", difficulty: "Intermediate", xp: 35, category: "SQL" },
    { id: 'bq248', question: "What is `MongoDB`?", answer: "A popular NoSQL document database", difficulty: "Intermediate", xp: 30, category: "SQL" },
    { id: 'bq249', question: "What is `Redis`?", answer: "An in-memory data structure store, used as a database, cache, and message broker", difficulty: "Advanced", xp: 45, category: "Tools" },
    { id: 'bq250', question: "What is `Kafka`?", answer: "A distributed streaming platform", difficulty: "Expert", xp: 60, category: "Tools" },
    { id: 'bq251', question: "What is `RabbitMQ`?", answer: "A popular message broker", difficulty: "Advanced", xp: 50, category: "Tools" },
    { id: 'bq252', question: "What is a `microservice` architecture?", answer: "An architectural style that structures an application as a collection of services", difficulty: "Advanced", xp: 50, category: "Concepts" },
    { id: 'bq253', question: "What is a `monolithic` architecture?", answer: "An architectural style where an application is built as a single, indivisible unit", difficulty: "Intermediate", xp: 30, category: "Concepts" },
    { id: 'bq254', question: "What is `SOLID`?", answer: "A mnemonic acronym for five design principles intended to make software designs more understandable, flexible, and maintainable", difficulty: "Expert", xp: 60, category: "OOP" },
    { id: 'bq255', question: "What is `YAGNI`?", answer: "You Ain't Gonna Need It", difficulty: "Intermediate", xp: 25, category: "Concepts" },
    { id: 'bq256', question: "What is `KISS` principle?", answer: "Keep It Simple, Stupid", difficulty: "Beginner", xp: 20, category: "Concepts" },
    { id: 'bq257', question: "What is `polymorphism`?", answer: "The provision of a single interface to entities of different types", difficulty: "Advanced", xp: 45, category: "OOP" },
    { id: 'bq258', question: "What is `inheritance`?", answer: "A mechanism in which one class acquires the property of another class", difficulty: "Intermediate", xp: 30, category: "OOP" },
    { id: 'bq259', question: "What is `encapsulation`?", answer: "The bundling of data with the methods that operate on that data", difficulty: "Intermediate", xp: 30, category: "OOP" },
    { id: 'bq260', question: "What is `abstraction`?", answer: "The concept of hiding the complex reality while exposing only the necessary parts", difficulty: "Intermediate", xp: 30, category: "OOP" },
    { id: 'bq261', question: "What is the `Decorator` pattern?", answer: "A design pattern that allows behavior to be added to an individual object, dynamically, without affecting the behavior of other objects from the same class", difficulty: "Expert", xp: 60, category: "Design Patterns" },
    { id: 'bq262', question: "What is the `Facade` pattern?", answer: "A design pattern that provides a simplified interface to a library, a framework, or any other complex set of classes", difficulty: "Advanced", xp: 50, category: "Design Patterns" },
    { id: 'bq263', question: "What is the `Proxy` pattern?", answer: "A design pattern that provides a surrogate or placeholder for another object to control access to it", difficulty: "Advanced", xp: 55, category: "Design Patterns" },
    { id: 'bq264', question: "What is `backtracking`?", answer: "An algorithmic-technique for solving problems recursively by trying to build a solution incrementally", difficulty: "Expert", xp: 70, category: "Algorithms" },
    { id: 'bq265', question: "What is a `greedy` algorithm?", answer: "An algorithmic paradigm that builds up a solution piece by piece, always choosing the next piece that offers the most obvious and immediate benefit", difficulty: "Advanced", xp: 55, category: "Algorithms" },
    { id: 'bq266', question: "What is `divide and conquer`?", answer: "An algorithm design paradigm based on multi-branched recursion", difficulty: "Advanced", xp: 55, category: "Algorithms" },
    { id: 'bq267', question: "What is `gradient descent`?", answer: "An optimization algorithm used to find the local minimum of a function", difficulty: "Expert", xp: 75, category: "AI/ML" },
    { id: 'bq268', question: "What is a `convolutional neural network` (CNN)?", answer: "A class of deep neural networks, most commonly applied to analyzing visual imagery", difficulty: "Expert", xp: 80, category: "AI/ML" },
    { id: 'bq269', question: "What is a `recurrent neural network` (RNN)?", answer: "A class of artificial neural networks where connections between nodes form a directed graph along a temporal sequence", difficulty: "Expert", xp: 80, category: "AI/ML" },
    { id: 'bq270', question: "What is `natural language processing` (NLP)?", answer: "A subfield of linguistics, computer science, and artificial intelligence concerned with the interactions between computers and human language", difficulty: "Advanced", xp: 55, category: "AI/ML" },
    { id: 'bq271', question: "What is `computer vision`?", answer: "An interdisciplinary scientific field that deals with how computers can gain high-level understanding from digital images or videos", difficulty: "Advanced", xp: 55, category: "AI/ML" },
    { id: 'bq272', question: "What is `reinforcement learning`?", answer: "An area of machine learning concerned with how intelligent agents ought to take actions in an environment in order to maximize the notion of cumulative reward", difficulty: "Expert", xp: 80, category: "AI/ML" },
    { id: 'bq273', question: "What is `supervised learning`?", answer: "The machine learning task of learning a function that maps an input to an output based on example input-output pairs", difficulty: "Intermediate", xp: 40, category: "AI/ML" },
    { id: 'bq274', question: "What is `unsupervised learning`?", answer: "A type of machine learning that looks for previously undetected patterns in a data set with no pre-existing labels", difficulty: "Intermediate", xp: 40, category: "AI/ML" },
    { id: 'bq275', question: "What is a `hypervisor`?", answer: "Software that creates and runs virtual machines (VMs)", difficulty: "Expert", xp: 60, category: "Cloud" },
    { id: 'bq276', question: "What is `IaaS`?", answer: "Infrastructure as a Service", difficulty: "Intermediate", xp: 30, category: "Cloud" },
    { id: 'bq277', question: "What is `PaaS`?", answer: "Platform as a Service", difficulty: "Intermediate", xp: 30, category: "Cloud" },
    { id: 'bq278', question: "What is a `race condition`?", answer: "An undesirable situation that occurs when a device or system attempts to perform two or more operations at the same time", difficulty: "Advanced", xp: 55, category: "Concepts" },
    { id: 'bq279', question: "In C++, what does `std::vector` do?", answer: "It's a sequence container that encapsulates dynamic size arrays.", difficulty: "Beginner", xp: 20, category: "C++" },
    { id: 'bq280', question: "What is a smart pointer in C++?", answer: "A pointer that manages the memory it points to.", difficulty: "Advanced", xp: 50, category: "C++" },
    { id: 'bq281', question: "What does the `auto` keyword do in C++?", answer: "Deduces the type of a variable from its initializer.", difficulty: "Intermediate", xp: 30, category: "C++" },
    { id: 'bq282', question: "In TypeScript, what is an `interface`?", answer: "A way to define contracts for an object's shape.", difficulty: "Beginner", xp: 25, category: "TypeScript" },
    { id: 'bq283', "question": "In TypeScript, what is a `union type`?", "answer": "A type that can be one of several types", "difficulty": "Intermediate", "xp": 30, "category": "TypeScript" },
    { id: 'bq284', "question": "What is `keyof` in TypeScript?", "answer": "An operator that creates a union of the keys of an object type", "difficulty": "Advanced", "xp": 45, "category": "TypeScript" },
    { id: 'bq285', "question": "What is 'optional chaining' (`?.`) in JavaScript?", "answer": "Safely access nested object properties", "difficulty": "Intermediate", "xp": 30, "category": "JavaScript" },
    { id: 'bq286', "question": "What is a 'lambda' in C++11?", "answer": "An anonymous function object", "difficulty": "Advanced", "xp": 50, "category": "C++" },
    { id: 'bq287', "question": "What is a `goroutine` in Go?", "answer": "A lightweight thread of execution", "difficulty": "Intermediate", "xp": 35, "category": "Go" },
    { id: 'bq288', "question": "What is the `defer` statement in Go used for?", "answer": "To schedule a function call to be run after the function completes", "difficulty": "Intermediate", "xp": 35, "category": "Go" },
    { id: 'bq289', "question": "What is 'ownership' in Rust?", "answer": "A set of rules that govern how a program manages memory", "difficulty": "Advanced", "xp": 60, "category": "Rust" },
    { id: 'bq290', "question": "What is the 'borrow checker' in Rust?", "answer": "A compiler feature that enforces ownership rules", "difficulty": "Expert", "xp": 70, "category": "Rust" },
    { id: 'bq291', "question": "What is `cargo` in the Rust ecosystem?", "answer": "Rust's build system and package manager", "difficulty": "Beginner", "xp": 20, "category": "Rust" },
    { id: 'bq292', "question": "What is a `trait` in Rust?", "answer": "A collection of methods defined for an unknown type: `Self`", "difficulty": "Advanced", "xp": 55, "category": "Rust" },
    { id: 'bq293', "question": "Which keyword is used for pattern matching in Rust?", "answer": "match", "difficulty": "Intermediate", "xp": 30, "category": "Rust" },
    { id: 'bq294', "question": "In Swift, what is an `optional`?", "answer": "A type that can hold either a value or no value", "difficulty": "Intermediate", "xp": 30, "category": "Swift" },
    { id: 'bq295', "question": "What is `Combine` in the Apple ecosystem?", "answer": "A framework for processing values over time", "difficulty": "Advanced", "xp": 50, "category": "Swift" },
    { id: 'bq296', "question": "What are `coroutines` in Kotlin?", "answer": "A concurrency design pattern for simplifying async code", "difficulty": "Advanced", "xp": 50, "category": "Kotlin" },
    { id: 'bq297', "question": "What is the purpose of the `yield` keyword in C#?", "answer": "To provide custom iteration without creating a temporary collection", "difficulty": "Advanced", "xp": 50, "category": "C#" },
    { id: 'bq298', "question": "What is `LINQ` in C#?", "answer": "Language-Integrated Query", "difficulty": "Advanced", "xp": 45, "category": "C#" },
    { id: 'bq299', "question": "What is `OTP` in Elixir/Erlang?", "answer": "Open Telecom Platform, a set of libraries for building robust systems", "difficulty": "Expert", "xp": 70, "category": "Elixir" },
    { id: 'bq300', "question": "What is the pipe operator `|>` in Elixir?", "answer": "Passes the result of one function as the first argument of the next", "difficulty": "Intermediate", "xp": 30, "category": "Elixir" }
];

export const games: Game[] = [
    { id: '1', title: 'Monster Battle', description: 'Answer coding trivia to defeat monsters in a turn-based RPG.', icon: Swords, href: '/games/monster-battle' },
    { id: '2', title: 'Debug Hunt', description: 'Find and fix bugs in code snippets against the clock.', icon: Bug, href: '/games/debug-hunt' },
    { id: '3', title: 'Code Jigsaw', description: 'Reassemble scrambled code blocks into a working program.', icon: Puzzle, href: '#' },
    { id: '4', title: 'Code Typer', description: 'Improve your typing speed and accuracy.', icon: Keyboard, href: '#' },
    { id: '5', title: 'Output Prediction', description: 'Test your code comprehension.', icon: Eye, href: '#' },
    { id: '6', 'title': 'Concept Match', 'description': 'Match code to programming concepts.', 'icon': BrainCircuit, 'href': '#' },
    { id: '7', title: 'Algo Arena', description: 'Competitive programming challenges against other users.', icon: Gamepad2, href: '#' },
    { id: '8', title: 'Security Fortress', description: 'Identify and patch security vulnerabilities in a codebase.', icon: Castle, href: '#' },
];

export const debugChallenges: DebugChallenge[] = [
  {
    id: 'db1',
    title: 'Python: Sum of List',
    description: 'This Python function is supposed to calculate the sum of a list of numbers, but it keeps returning 0.',
    language: 'python',
    difficulty: 'Beginner',
    xp: 20,
    buggyCode: `def calculate_sum(numbers):
  total = 0
  for number in numbers:
    number + total
  return total
`,
    fixedCode: `def calculate_sum(numbers):
  total = 0
  for number in numbers:
    total = total + number
  return total
`
  },
  {
    id: 'db2',
    title: 'JavaScript: Greet User',
    description: 'This JavaScript function should return a greeting string "Hello, [name]!", but it\'s not working correctly.',
    language: 'javascript',
    difficulty: 'Beginner',
    xp: 20,
    buggyCode: `function greet(name) {
  "Hello, " + name + "!"
}`,
    fixedCode: `function greet(name) {
  return "Hello, " + name + "!";
}`
  },
  {
    id: 'db3',
    title: 'JavaScript: Counter Bug',
    description: 'This React component has a button that should increment a counter, but the counter value never changes in the UI.',
    language: 'javascript',
    difficulty: 'Intermediate',
    xp: 40,
    buggyCode: `import { useState } from 'react';

function Counter() {
  let count = 0;

  const handleClick = () => {
    count = count + 1;
    console.log(count);
  };

  return (
    <div>
      <p>Count: {count}</p>
      <button onClick={handleClick}>Increment</button>
    </div>
  );
}
`,
    fixedCode: `import { useState } from 'react';

function Counter() {
  const [count, setCount] = useState(0);

  const handleClick = () => {
    setCount(count + 1);
  };

  return (
    <div>
      <p>Count: {count}</p>
      <button onClick={handleClick}>Increment</button>
    </div>
  );
}
`
  }
];
